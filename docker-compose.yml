version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: db
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - transcendence

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/src/app/src
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - FORTYTWO_CLIENT_ID=${FORTYTWO_CLIENT_ID}
      - FORTYTWO_CLIENT_SECRET=${FORTYTWO_CLIENT_SECRET}
    networks:
      - transcendence

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - backend
    volumes:
      - ./frontend:/src
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_PORT=${FRONTEND_PORT}
    networks:
      - transcendence

volumes:
  pgdata:

networks:
  transcendence:
