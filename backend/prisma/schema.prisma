generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  intraId        Int        @unique
  name           String     @unique
  image_url      String
  friends        Int[]
  twoFAEnabled   Boolean    @default(false)
  twoFASecret    String?
  blockedUserIds Int[]
  chatroomId     Int?
  wins           Int        @default(0)
  losses         Int        @default(0)
  socket         Json?
  avatar         Json?

  // Chat
  chatrooms  Chatroom[] @relation("banned")
  adminOf    Chatroom[] @relation("admin")
  // Chatroom   Chatroom?  @relation(fields: [chatroomId], references: [id])
  Chatroom   Chatroom[]
}

model GameInfo {
  id        Int       @id @default(autoincrement())
  score     Int[]
  state     GameState
  p1        Int
  p2        Int
  createdAt DateTime  @default(now())
  roomName  String?
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  chatroomId Int
  senderName String
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id])
}

model Chatroom {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  private      Boolean   @default(false)
  isDm         Boolean   @default(false)
  pw_hash      String?
  ownerIntraId Int
  messages     Message[]
  users        User[]
  admins       User[]    @relation("admin")
  bannedUsers  User[]    @relation("banned")
}

enum GameState {
  PENDING
  IN_PROGRESS
  FINISHED
}
